services:
  # PostgreSQL Database
  postgres:
    image: quay.io/rh-ai-quickstart/spending-monitor-db:latest
    build:
      context: .
      dockerfile: packages/db/Containerfile
    container_name: spending-monitor-db
    environment:
      POSTGRES_DB: spending-monitor
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d spending-monitor"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - spending-monitor

  # SMTP Server for testing (smtp4dev)
  smtp4dev:
    image: rnwood/smtp4dev:latest
    container_name: spending-monitor-smtp
    ports:
      - "3002:80"   # Web UI
      # smtp4dev listens on port 25 for incoming SMTP traffic.
      # Uncomment the following line to also accept SMTP traffic from the host on port 2525.
      # - "2525:25"
    networks:
      - spending-monitor

  # FastAPI Backend
  api:
    image: quay.io/rh-ai-quickstart/spending-monitor-api:latest
    build:
      context: .
      dockerfile: packages/api/Containerfile
    container_name: spending-monitor-api
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@postgres:5432/spending-monitor
      - SMTP_HOST=smtp4dev
      - SMTP_PORT=25
      - SMTP_USERNAME=
      - SMTP_PASSWORD=
      - SMTP_FROM_EMAIL=spending-monitor@localhost
      - SMTP_USE_TLS=false
      - SMTP_USE_SSL=false
      - ENVIRONMENT=development
      - BYPASS_AUTH=true
      - API_PORT=8000
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
      - BASE_URL=xxxx
      - API_KEY=add-your-openai-api-key-here
      - MODEL=xxxx
      - LLM_PROVIDER=openai
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      smtp4dev:
        condition: service_started
    networks:
      - spending-monitor

  # React Frontend
  ui:
    image: quay.io/rh-ai-quickstart/spending-monitor-ui:latest
    build:
      context: .
      dockerfile: packages/ui/Containerfile
    container_name: spending-monitor-ui
    depends_on:
      - api
    networks:
      - spending-monitor
    environment:
      - VITE_API_BASE_URL=/api

  # Nginx reverse proxy to serve UI and proxy API
  nginx:
    image: nginx:alpine
    container_name: spending-monitor-nginx
    ports:
      - "3000:80"
    depends_on:
      - ui
      - api
    networks:
      - spending-monitor
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: spending-monitor-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - spending-monitor
    profiles:
      - tools  # Only start with --profile tools

networks:
  spending-monitor:
    driver: bridge

volumes:
  postgres_data: